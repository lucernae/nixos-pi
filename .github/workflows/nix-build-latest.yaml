name: nix-build-latest
on:
  push:
jobs:
  use-qemu-docker:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixos-20.09
        extra_nix_config: |
          extra-platforms = aarch64-linux
    - run: cat /etc/nix/nix.conf
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Test aarch64-linux
      run: |
        cat /proc/sys/fs/binfmt_misc/qemu-aarch64
    - run: nix-build '<nixpkgs/nixos>' -A config.system.build.sdImage -I nixos-config=./configuration.default.sdImage.nix --argstr system aarch64-linux --option sandbox false
    - uses: actions/upload-artifact@v2
      with:
        name: sd-image.img
        path: ./result/sd-image/*.img

  use-qemu-debian:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixos-20.09
        extra_nix_config: |
          extra-platforms = aarch64-linux
    - run: cat /etc/nix/nix.conf
    - run: |
        sudo apt -y update
        sudo apt -y install qemu qemu-kvm qemu-system-arm qemu-user qemu-user-static
    - name: Test aarch64-linux
      run: |
        cat /proc/sys/fs/binfmt_misc/qemu-aarch64
    - run: nix-build '<nixpkgs/nixos>' -A config.system.build.sdImage -I nixos-config=./configuration.default.sdImage.nix --argstr system aarch64-linux --option sandbox false
    - uses: actions/upload-artifact@v2
      with:
        name: sd-image.img
        path: ./result/sd-image/*.img