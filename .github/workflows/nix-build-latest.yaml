name: nix-build-latest
on:
  push:
jobs:
  use-qemu-docker:
    if: false
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixos-20.09
        extra_nix_config: |
          extra-platforms = aarch64-linux
    - run: cat /etc/nix/nix.conf
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Test aarch64-linux
      run: |
        cat /proc/sys/fs/binfmt_misc/qemu-aarch64
        /usr/bin/qemu-aarch64-static --version
    - run: nix-build '<nixpkgs/nixos>' -A config.system.build.sdImage -I nixos-config=./configuration.default.sdImage.nix --argstr system aarch64-linux --option sandbox false
    - uses: actions/upload-artifact@v2
      with:
        name: sd-image.img
        path: ./result/sd-image/*.img

  use-qemu-source:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixos-20.09
        extra_nix_config: |
          extra-platforms = aarch64-linux
    - run: cat /etc/nix/nix.conf
    - uses: myci-actions/add-deb-repo@4
      with:
        repo: deb http://http.us.debian.org/debian sid main non-free contrib
        repo-name: debian-sid
        keys: 04EE7237B7D453EC
    - run: |
        sudo apt -y install qemu qemu-kvm qemu-system-arm qemu-user qemu-user-static
    # - run: |
    #     cat /etc/apt/sources.list
    #     sudo echo "deb-src http://azure.archive.ubuntu.com/ubuntu/ focal main restricted" >> /etc/apt/sources.list
    #     sudo apt -y update
    #     sudo apt -y build-dep qemu
    #     git clone git://git.qemu.org/qemu.git
    #     pushd qemu
    #     git submodule update --init --recursive
    #     ./configure \
    #       --prefix=$(cd ..; pwd)/qemu-user-static \
    #       --static \
    #       --disable-system \
    #       --enable-linux-user
    #     make -j2
    #     make install
    #     popd
    #     pushd qemu-user-static/bin
    #     for i in *; do cp $i $i-static; done
    #     popd
    - name: Test aarch64-linux
      run: |
        cat /proc/sys/fs/binfmt_misc/qemu-aarch64
        qemu-user-static/bin/qemu-aarch64-static --version
        /usr/bin/qemu-aarch64-static --version
    - run: nix-build '<nixpkgs/nixos>' -A config.system.build.sdImage -I nixos-config=./configuration.default.sdImage.nix --argstr system aarch64-linux --option sandbox false
    - uses: actions/upload-artifact@v2
      with:
        name: sd-image.img
        path: ./result/sd-image/*.img